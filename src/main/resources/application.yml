server:
  port: 8885

spring:
  application:
    name: leucam-payment-service
  jpa:
    hibernate:
      ddl-auto: update
  datasource:
    url: jdbc:h2:file:./data/leucam-payment
    driver-class-name: org.h2.Driver
    platform: org.hibernate.dialect.H2Dialect
    username: root
    password:

  rabbitmq:
    addresses: amqp://***
  cloud:
    stream:
      bindings:
        userRegistrationChannel:
          destination: leucam-user-registration
        userOrderChannel:
          destination: leucam-order-registration
        userCancellationChannel:
          destination: leucam-user-cancellation
        orderCancellationChannel:
          destination: leucam-order-cancellation
        orderPaymentChannel:
          destination: leucam-order-payment
        rechargeUserCreditChannel:
          destination: leucam-recharge-user-credit

eureka:
  instance:
    hostname: localhost
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8880/eureka

message:
  orderNotExist: "The order ID %d does not exist"
  userNotFound: "The user ID %d has not an internal credit in leucam"
  insufficientCredit: "Payment was not approved : insufficient credit. Total to pay : %s - Actual Credit for user ID %d : %s"
  alreadyPaid: "This order (ID #%d) has already been paid"
  paymentApproved: "Payment succesfully approved"

feign:
  client:
    config:
      default:
        connectTimeout: 15000
        readTimeout: 15000

api:
  username:
  password:

leucam:
  api:
    username:
    password:
